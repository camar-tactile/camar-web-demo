{"version":3,"sources":["Guide.js","Split.js","Corner.js","PlaceCargo.js","ComponentSelector.js","reportWebVitals.js","index.js"],"names":["Guide","target1Ref","useRef","undefined","target2Ref","target3Ref","confirmRef","useEffect","actions","feedForward","DistanceFeedForward","document","body","action","SimpleAction","current","CornerActivation","BOTTOM_RIGHT","Audio","setActionCallback","target","nextTarget","nextSound","Manager","stop","style","backgroundColor","setTargetElement","setIntersectionSound","push","setActions","start","console","log","reset","className","class","ref","Split","leftSplitRef","rightSplitRef","useState","volume","setVolume","volumeRef","temperature","setTemperature","temperatureRef","updateVolume","value","updateTemperature","leftSplit","ScrollAction","HORIZONTAL","SplitActivation","LEFT","SimpleFeedForward","moveDirection","MOVEMENT_RIGHT","playSound","MOVEMENT_LEFT","rightSplit","VERTICAL","RIGHT","MOVEMENT_UP","MOVEMENT_DOWN","onClick","Corner","buttonRefVolumeUp","buttonRefVolumeDown","buttonRefTempUp","buttonRefTempDown","simpleFeedForwardUp","volumeUp","TriggerOutsideAction","TOP_LEFT","setTriggerRepeatedly","setTriggerOutsideTarget","simpleFeedForwardDown","volumeDown","BOTTOM_LEFT","distanceFeedForwardUp","tempUp","TOP_RIGHT","distanceFeedForwardDown","setTargetIntersectedColor","tempDown","PlaceCargo","optimalPositionRef","truckRef","cancelRef","confirm","cancel","display","placeCargo","disabled","addEventListener","event","targetElement","cancelFeedForward","cancelAction","alt","src","initialComponent","ComponentSelector","vibrationStatusRef","currentComponent","setCurrentComponent","vibrationStatus","isFeedbackActivated","color","textContent","updateStatusElement","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e827dc0b.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport './Guide.css';\nimport { \n  Manager,\n  SimpleAction,\n  DistanceFeedForward,\n  CornerActivation } from \"tactile-for-web\"\n\n/**\n * This example illustrates a flow where the user is guided to a series of targets with the help of CAMAR's SimpleAction and DistanceFeedForward.\n * The strength of the background color of the feedback elemnt, in this case the body element, illustrates the distance from the users current touch position to the target.\n * Once a target is intersected the action callback is triggered and the desired action can be performed. \n * This is also where the target is updated to the next target in the flow. \n */\nfunction Guide() {\n\n  const target1Ref = useRef(undefined)\n  const target2Ref = useRef(undefined)\n  const target3Ref = useRef(undefined)\n  const confirmRef = useRef(undefined)\n\n  useEffect(() => {\n    const actions = []\n    \n    const feedForward = DistanceFeedForward(document.body, undefined, \"#00800088\")\n    const action = SimpleAction(target1Ref.current, CornerActivation(CornerActivation.BOTTOM_RIGHT), feedForward, new Audio(\"./target1_intersected.mp3\"), undefined)\n    action.setActionCallback(function (target) {\n      var nextTarget = undefined\n      var nextSound = undefined\n\n      if (target === target1Ref.current) {\n        nextTarget = target2Ref.current\n        nextSound = new Audio(\"./target2_intersected.mp3\")\n      } else if (target === target2Ref.current) {\n        nextTarget = target3Ref.current\n        nextSound = new Audio(\"./target3_intersected.mp3\")\n      } else if (target === target3Ref.current) {\n        nextTarget = confirmRef.current\n        nextSound = new Audio(\"./confirm.mp3\")\n      } else if (target === confirmRef.current) {\n        Manager.stop();\n        document.body.style.backgroundColor = \"#00FF00\";\n      }\n\n      if (nextTarget !== undefined) {\n        action.setTargetElement(nextTarget)\n      }\n      if (nextSound !== undefined) {\n        action.setIntersectionSound(nextSound)\n      }\n    })\n    actions.push(action)\n\n    Manager.setActions(actions)\n    Manager.start()\n\n    return () => {\n      console.log(\"componentWillUnmount()\")\n      Manager.reset()\n      document.body.style.backgroundColor = \"#FFFFFF\";\n    }\n  })\n\n  return (\n    <div className=\"Guide\">\n      <div class=\"container-site-title\">\n        <p>\n          Guide \n        </p>\n      </div>\n      <div class=\"buttonContainer1\">\n        <button class=\"guideButton\" ref={target1Ref}>\n          Target 1\n        </button>\n      </div>\n      <div class=\"buttonContainer2\">\n        <button class=\"guideButton\" ref={target2Ref}>\n            Target 2\n        </button>\n      </div>\n      <div class=\"buttonContainer3\">\n        <button class=\"guideButton\" ref={target3Ref}>\n            Target 3\n        </button>\n      </div>\n      <div class=\"buttonContainer4\">\n        <button class=\"guideButton\" ref={confirmRef}>\n            CONFIRM\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Guide;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport './Split.css';\nimport { \n  Manager,\n  ScrollAction,\n  SimpleFeedForward,\n  SplitActivation } from \"tactile-for-web\"\n\n\n/**\n * This example illustrates a simple user interface through which the user can turn the volume and temperature up and down.\n * By integrating with CAMAR's ScrollAction, SplitActivation and SimpleFeedForward the user is able to adjust the values by scrolling horizontally and vertically without directly interacting with the control elements.\n * Using the SplitActivation component enables the user to indicate which value(volume or temperature) to interact with by starting the touch session on either the left or right side of the screen.\n * The SimpleFeedForward component will clearly indicate which value the user is interacting with by setting the background color of the feedback element to the given color.\n * To activate the scroll intercatin the user have to keep her finger relatively still on the screen for 500 milliseconds. While the user is scrolling the ScrollAction's action callback will be triggered repeatedly.\n */\nfunction Split() {\n\n  const leftSplitRef = useRef(undefined)\n  const rightSplitRef = useRef(undefined)\n\n  const [volume, setVolume] = useState(16)\n  const volumeRef = useRef(volume)\n\n  const [temperature, setTemperature] = useState(21)\n  const temperatureRef = useRef(temperature)\n\n  function updateVolume(value) {\n    setVolume(value)\n    volumeRef.current = value\n  }\n\n  function updateTemperature(value) {\n    setTemperature(value)\n    temperatureRef.current = value\n  }\n\n  const volumeUp = () => {\n    Manager.playSound(new Audio(\"./volume_up.mp3\"), true)\n    updateVolume(volume + 1)\n  }\n\n  const volumeDown = () => {\n    Manager.playSound(new Audio(\"./volume_down.mp3\"), true)\n    updateVolume(volume - 1)\n  }\n\n  const temperatureUp = () => {\n    Manager.playSound(new Audio(\"./temperature_up.mp3\"), true)\n    updateTemperature(temperature + 1)\n  }\n\n  const temperatureDown = () => {\n    Manager.playSound(new Audio(\"./temperature_down.mp3\"), true)\n    updateTemperature(temperature - 1)\n  }\n\n  useEffect(() => {\n    const actions = []\n\n    const leftSplit = ScrollAction(ScrollAction.HORIZONTAL, SplitActivation(SplitActivation.LEFT), SimpleFeedForward(leftSplitRef.current), (moveDirection) => {\n      if (moveDirection === ScrollAction.MOVEMENT_RIGHT) {\n        updateVolume(volumeRef.current + 1)\n        Manager.playSound(new Audio(\"./volume_up.mp3\"), false)\n      } else if (moveDirection === ScrollAction.MOVEMENT_LEFT) {\n        updateVolume(volumeRef.current - 1)\n        Manager.playSound(new Audio(\"./volume_down.mp3\"), false)\n      }\n    })\n    actions.push(leftSplit)\n\n    const rightSplit = ScrollAction(ScrollAction.VERTICAL, SplitActivation(SplitActivation.RIGHT), SimpleFeedForward(rightSplitRef.current, \"#00800088\"), (moveDirection) => {\n      if (moveDirection === ScrollAction.MOVEMENT_UP) {\n        updateTemperature(temperatureRef.current + 1)\n        Manager.playSound(new Audio(\"./temperature_up.mp3\"), false)\n      } else if (moveDirection === ScrollAction.MOVEMENT_DOWN) {\n        updateTemperature(temperatureRef.current - 1)\n        Manager.playSound(new Audio(\"./temperature_down.mp3\"), false)\n      }\n    })\n    actions.push(rightSplit)\n    \n\n    Manager.setActions(actions)\n    Manager.start()\n\n    return () => {\n      console.log(\"componentWillUnmount()\")\n      Manager.reset()\n    }\n  }, [])\n\n  return (\n    <div className=\"Split\">\n      <div class=\"split\" ref={leftSplitRef}>\n        <div class=\"split-container-title\">\n          <p>\n            Volume \n          </p>\n        </div>\n        <div class=\"split-container-text\">\n          <p>\n            {volume}\n          </p>\n        </div>\n        <div class=\"split-corner\">\n          <div class=\"split-button-container-top\">\n            <button class=\"corner-button\" onClick={volumeUp}>\n              +\n            </button>\n          </div>\n        </div>\n        <div class=\"split-corner\">\n          <div class=\"split-button-container-bottom\">\n            <button class=\"corner-button\" onClick={volumeDown}>\n              -\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"split\" ref={rightSplitRef}>\n        <div class=\"split-container-title\">\n          <p>\n            Temperature\n          </p>\n        </div>\n        <div class=\"split-container-text\">\n          <p>\n            {temperature}\n          </p>\n        </div>\n        <div class=\"split-corner\">\n          <div class=\"split-button-container-top\">\n            <button class=\"corner-button\" onClick={temperatureUp}>\n              +\n            </button>\n          </div>\n        </div>\n        <div class=\"split-corner\">\n          <div class=\"split-button-container-bottom\">\n            <button class=\"corner-button\" onClick={temperatureDown}>\n              -\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"container-site-title\">\n        <p>\n          Split \n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Split;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport './Corner.css';\nimport { \n  Manager,\n  TriggerOutsideAction,\n  SimpleFeedForward,\n  DistanceFeedForward,\n  CornerActivation } from \"tactile-for-web\"\n\n/**\n * This example illustrates a simple user interface through which the user can turn the volume and temperature up and down.\n * The example makes use of CAMAR's TriggerOutsideAction, CornerActivation, SimpleFeedForward and DistanceFeedForward.\n * Each of the control elements are mapped to a corner of the screen. By starting the touch session close to one of the corners the action of the control element mapped to that corner will be locked and performed.\n * Fx. if the user wants to turn down the volume, she would start the touch session in the bottom left corner.\n * To change action, the user have to lift her finger to end the touch session and begin a new touch session from the corner mapped to the desired action.\n * In this example interacting with the volume controls differ slightly from interacting with the temperature controls.\n * This is because the TriggerOutsideAction callbacks for volume is set to trigger outside the control element when the users finger has been still on the screen for 500 milliseconds. \n * Meanwhile the TriggerOutsideAction's for temperature will only trigger when the user intersects with the temperature control elements.\n * Because the volume actions can be triggered everywhere on the screen the SimpleFeedForward component is used to indicate which action the user is performing.\n * For interacting with the temperature the user is guided to the control elements by the DistanceFeedForward conponent.\n */\nfunction Corner() {\n\n  const buttonRefVolumeUp = useRef(undefined)\n  const buttonRefVolumeDown = useRef(undefined)\n  const buttonRefTempUp = useRef(undefined)\n  const buttonRefTempDown = useRef(undefined)\n\n  const [volume, setVolume] = useState(16)\n  const volumeRef = useRef(volume)\n\n  const [temperature, setTemperature] = useState(21)\n  const temperatureRef = useRef(temperature)\n\n  function updateVolume(value) {\n    setVolume(value)\n    volumeRef.current = value\n  }\n\n  function updateTemperature(value) {\n    setTemperature(value)\n    temperatureRef.current = value\n  }\n\n  const volumeUp = () => {\n    Manager.playSound(new Audio(\"./volume_up.mp3\"), true)\n    updateVolume(volume + 1)\n  }\n\n  const volumeDown = () => {\n    Manager.playSound(new Audio(\"./volume_down.mp3\"), true)\n    updateVolume(volume - 1)\n  }\n\n  const temperatureUp = () => {\n    Manager.playSound(new Audio(\"./temperature_up.mp3\"), true)\n    updateTemperature(temperature + 1)\n  }\n\n  const temperatureDown = () => {\n    Manager.playSound(new Audio(\"./temperature_down.mp3\"), true)\n    updateTemperature(temperature - 1)\n  }\n\n  useEffect(() => {\n    const actions = []\n\n    // VOLUME UP setup\n    const simpleFeedForwardUp = SimpleFeedForward(document.body, \"#00FF0088\")\n    const volumeUp = TriggerOutsideAction(buttonRefVolumeUp.current, CornerActivation(CornerActivation.TOP_LEFT), simpleFeedForwardUp, new Audio(\"./volume_up.mp3\"), () => {\n      updateVolume(volumeRef.current + 1)\n    })\n    volumeUp.setTriggerRepeatedly(true)\n    volumeUp.setTriggerOutsideTarget(true)\n    actions.push(volumeUp)\n\n    // VOLUME DOWN setup\n    const simpleFeedForwardDown = SimpleFeedForward(document.body, \"#0000FF88\")\n    const volumeDown = TriggerOutsideAction(buttonRefVolumeDown.current, CornerActivation(CornerActivation.BOTTOM_LEFT), simpleFeedForwardDown, new Audio(\"./volume_down.mp3\"), () => {\n      updateVolume(volumeRef.current - 1)\n    })\n    volumeDown.setTriggerRepeatedly(true)\n    volumeDown.setTriggerOutsideTarget(true)\n    actions.push(volumeDown)\n\n    // TEMPERATURE UP setup\n    const distanceFeedForwardUp = DistanceFeedForward(document.body)\n    const tempUp = TriggerOutsideAction(buttonRefTempUp.current, CornerActivation(CornerActivation.TOP_RIGHT), distanceFeedForwardUp, new Audio(\"./temperature_up.mp3\"), () => {\n      updateTemperature(temperatureRef.current + 1)\n    })\n    tempUp.setTriggerRepeatedly(true)\n    actions.push(tempUp)\n\n    // TEMPERATURE DOWN setup \n    const distanceFeedForwardDown = DistanceFeedForward(document.body)\n    distanceFeedForwardDown.setTargetIntersectedColor(\"#00800088\")\n    const tempDown = TriggerOutsideAction(buttonRefTempDown.current, CornerActivation(CornerActivation.BOTTOM_RIGHT), distanceFeedForwardDown, new Audio(\"./temperature_down.mp3\"), () => {\n      updateTemperature(temperatureRef.current - 1)\n    })\n    tempDown.setTriggerRepeatedly(true)\n    actions.push(tempDown)\n\n    // SET actions and START\n    Manager.setActions(actions)\n    Manager.start()\n\n    return () => {\n      console.log(\"componentWillUnmount()\")\n      Manager.reset()\n    }\n  }, [])\n\n  return (\n    <div className=\"Corner\">\n      <div class=\"corner-side\">\n        <div class=\"corner-container-title\">\n          <p>\n            Volume \n          </p>\n        </div>\n        <div class=\"corner-container-text\">\n          <p>\n            {volume}\n          </p>\n        </div>\n        <div class=\"corner\">\n          <div class=\"corner-button-container-top\">\n            <button class=\"corner-button\" ref={buttonRefVolumeUp} onClick={volumeUp}>\n              +\n            </button>\n          </div>\n        </div>\n        <div class=\"corner\">\n          <div class=\"corner-button-container-bottom\">\n            <button class=\"corner-button\" ref={buttonRefVolumeDown} onClick={volumeDown}>\n              -\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"corner-side\">\n        <div class=\"corner-container-title\">\n          <p>\n            Temperature \n          </p>\n        </div>\n        <div class=\"corner-container-text\">\n          <p>\n            {temperature}\n          </p>\n        </div>\n        <div class=\"corner\">\n          <div class=\"corner-button-container-top\">\n            <button class=\"corner-button\" ref={buttonRefTempUp} onClick={temperatureUp}>\n              +\n            </button>\n          </div>\n        </div>\n        <div class=\"corner\">\n          <div class=\"corner-button-container-bottom\">\n            <button class=\"corner-button\" ref={buttonRefTempDown} onClick={temperatureDown}>\n              -\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"container-site-title\">\n        <p>\n          Corner \n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Corner;\n","import React, { useEffect, useRef } from \"react\";\nimport './PlaceCargo.css';\nimport { \n  Manager,\n  SimpleAction,\n  DistanceFeedForward,\n  CornerActivation } from \"tactile-for-web\"\n\n\n/**\n * This example guides the user through the flow of placing the cargo at the optimal storage position and the confirming the placement.\n * This is done by integrating with CAMAR's SimpleAction and DistanceFeedForward components.\n * The background color of the feedback element guides the users touch towards the optimal storage position. Once the user intersects the target position the action callback is triggered and the cargo is placed.\n * Next the confirm button is set as the next target in the flow and the users touch is now guided towards this new target.\n * \n * If the user wants to cancel the flow she can start a touch session in the bottom left corner. Because canceling is a \"serious\" action, the action callback will only trigger once the users touch intersect the cancle button.\n * The users touch is guided to the cancel button with the help of the DistanceFeedForward component.\n */\nfunction PlaceCargo() {\n\n  const optimalPositionRef = useRef(undefined)\n  const truckRef = useRef(undefined)\n  const confirmRef = useRef(undefined)\n  const cancelRef = useRef(undefined)\n\n  const confirm = () => {\n    Manager.playSound(new Audio(\"./confirm.mp3\"), true)\n  }\n\n  const cancel = () => {\n    truckRef.current.style.display = 'none'\n    Manager.playSound(new Audio(\"./cancel.mp3\"), true)\n  }\n\n  function placeCargo() {\n    truckRef.current.style.display = 'inline-block'\n    confirmRef.current.disabled = false\n    Manager.playSound(new Audio(\"./cargo_placed.mp3\"), true)\n  }\n\n  useEffect(() => {\n    const actions = []\n    confirmRef.current.disabled = true\n\n    optimalPositionRef.current.addEventListener('click', function (event) {\n      placeCargo()\n    });\n\n    // Setup flow for placing container at optimal location and then confirming\n    const feedForward = DistanceFeedForward(document.body, \"#00FF00\", \"#00800088\")\n    const action = SimpleAction(optimalPositionRef.current, undefined, feedForward, undefined, undefined)\n    action.setActionCallback(function (targetElement) {\n      var nextTarget = undefined\n      var nextSound = undefined\n\n      if (targetElement === optimalPositionRef.current) {\n        placeCargo()\n        nextTarget = confirmRef.current\n      } else if (targetElement === confirmRef.current) {\n        Manager.stop()\n        confirm()\n        document.body.style.backgroundColor = \"#00FF00\";\n      }\n\n      if (nextTarget !== undefined) {\n        action.setTargetElement(nextTarget)\n      }\n      action.setIntersectionSound(nextSound)\n    })\n    actions.push(action)\n\n    // Setup cancel button\n    const cancelFeedForward = DistanceFeedForward(document.body, \"#FF0000\", \"#80000088\")\n    const cancelAction = SimpleAction(cancelRef.current, CornerActivation(CornerActivation.BOTTOM_LEFT), cancelFeedForward, undefined, () => {\n      Manager.stop()\n      cancel()\n      document.body.style.backgroundColor = \"#FFFFFF\";\n    })\n    actions.push(cancelAction)\n\n    // Add the interactions and start the TactileFeedbackHandler\n    Manager.setActions(actions)\n    Manager.start()\n\n    return () => {\n      console.log(\"componentWillUnmount()\")\n      // Stop and reset the TactileFeedbackHandler before destroying the component\n      Manager.reset()\n      document.body.style.backgroundColor = \"#FFFFFF\";\n    }\n  })\n\n  return (\n    <div className=\"PlaceCargo\">\n      <div class=\"container\">\n        <div class=\"lane validLane\">\n          <div class=\"optimal-position\" ref={optimalPositionRef}>\n            <img class=\"draggable\" alt=\"truck\" src=\"./truck.png\" ref={truckRef} />\n          </div>\n        </div>\n        <div class=\"lane invalidLane\"></div>\n      </div>\n      <div class=\"cancel-button-container\">\n        <button class=\"button\" ref={cancelRef} onClick={cancel}>\n          CANCEL\n        </button>\n      </div>\n      <div class=\"confirm-button-container\">\n        <button class=\"button\" ref={confirmRef} onClick={confirm}>\n          CONFIRM\n        </button>\n      </div>\n      <div class=\"container-site-title\">\n        <p>\n          Place Cargo\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default PlaceCargo;\n","import React, { useRef, useState } from \"react\";\nimport \"./ComponentSelector.css\"\nimport { Button } from \"react-bootstrap\";\nimport { Manager } from \"tactile-for-web\"\nimport Guide from \"./Guide\";\nimport Split from \"./Split\"\nimport Corner from \"./Corner\";\nimport PlaceCargo from \"./PlaceCargo\";\n\nconst initialComponent = () => <Guide />\n\nfunction ComponentSelector() {\n  const vibrationStatusRef = useRef(undefined)\n\n  const [currentComponent, setCurrentComponent] = useState(initialComponent);\n\n  function updateStatusElement() {\n    if (vibrationStatusRef.current !== undefined) {\n      const vibrationStatus = vibrationStatusRef.current\n      if (Manager.isFeedbackActivated() === true) {\n        vibrationStatus.style.color = \"#008000\"\n        vibrationStatus.textContent = 'Activated'\n      } else {\n        vibrationStatus.style.color = \"#80808080\"\n        vibrationStatus.textContent = 'Deactivated'\n      }\n    }\n  }\n\n  document.body.addEventListener('mouseup', function() {\n    updateStatusElement()\n  }, true);\n  \n  return (\n    <div className=\"ComponentSelector\">\n      { currentComponent }\n      <div class=\"container-vibration-status\">\n        <p ref={vibrationStatusRef}>\n          Deactivated\n        </p> \n      </div>\n      <div class=\"container-links\">\n        <Button onClick={ () => setCurrentComponent(<Guide />) } >Guide</Button> &nbsp;/&nbsp;\n        <Button onClick={ () => setCurrentComponent(<Split />) } >Split</Button> &nbsp;/&nbsp;\n        <Button onClick={ () => setCurrentComponent(<Corner />) } >Corner</Button> &nbsp;/&nbsp;\n        <Button onClick={ () => setCurrentComponent(<PlaceCargo />) } >Cargo</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default ComponentSelector;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ComponentSelector from './ComponentSelector';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ComponentSelector />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}